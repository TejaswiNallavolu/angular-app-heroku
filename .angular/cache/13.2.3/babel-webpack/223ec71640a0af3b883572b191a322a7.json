{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../Shared/auth.service\";\nexport let RegisterTwoComponent = /*#__PURE__*/(() => {\n  class RegisterTwoComponent {\n    constructor(fb, http, router, authService) {\n      this.fb = fb;\n      this.http = http;\n      this.router = router;\n      this.authService = authService;\n      this.model = {};\n    }\n\n    ngOnInit() {\n      this.CreateRegisterForm();\n    } // passwordMatchValidator(g: FormGroup) {\n    //   return g.get('Password').value === g.get('ConfirmPassword').value ? null : { mismatch: true };\n    // }\n    // signUp(){\n    //   this.http.post<any>('http://www.classreminder-1a.somee.com/api/login/register',this.signupForm.value)\n    //   .subscribe(res=>{\n    //     alert('Registered Successfully');\n    //     this.signupForm.reset();\n    //     this.router.navigateByUrl('/login');\n    //   }, err=>{\n    //     alert('Error');\n    //   })\n    // }\n\n\n    CreateRegisterForm() {\n      this.registerForm = this.fb.group({\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', [Validators.required]],\n        confirmPassword: ['', [Validators.required]]\n      });\n    }\n\n    register() {\n      if (this.registerForm.valid) {\n        this.model = Object.assign({}, this.registerForm.value);\n        this.authService.register(this.model).subscribe(data => {\n          alert(\"register success\");\n          this.router.navigate(['/login']);\n        }, error => {\n          console.log(error);\n        });\n      } else {\n        console.log(\"invalid\");\n      }\n    }\n\n  }\n\n  RegisterTwoComponent.ɵfac = function RegisterTwoComponent_Factory(t) {\n    return new (t || RegisterTwoComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.AuthService));\n  };\n\n  RegisterTwoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterTwoComponent,\n    selectors: [[\"app-register-two\"]],\n    decls: 2,\n    vars: 0,\n    template: function RegisterTwoComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"register-two works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"\"]\n  });\n  return RegisterTwoComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}